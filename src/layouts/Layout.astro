---
import { ViewTransitions } from 'astro:transitions';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';

interface Props {
	title: string;
	description?: string;
	headerVariant?: 'transparent' | 'solid';
}

const { 
	title, 
	description = 'Развивающая логопедическая игра с кубиками для детей',
	headerVariant = 'solid'
} = Astro.props;

// Performance optimization: Preload critical assets
const criticalAssets = [
  { href: '/fonts/inter-var.woff2', as: 'font', type: 'font/woff2', crossorigin: true },
  { href: '/patterns/mesh.svg', as: 'image' }
];
---

<!doctype html>
<html lang="ru" class="scroll-smooth">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width, initial-scale=1, viewport-fit=cover, maximum-scale=1" />
		<meta name="theme-color" content="#ffffff" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<link rel="apple-touch-icon" href="/apple-touch-icon.png" />
		<link rel="manifest" href="/manifest.json" />
		<meta name="generator" content={Astro.generator} />
		
		<!-- Performance optimizations -->
		{criticalAssets.map(asset => (
			<link
				rel="preload"
				href={asset.href}
				as={asset.as}
				type={asset.type}
				crossorigin={asset.crossorigin}
			/>
		))}
		<link
			rel="preload"
			href="/fonts/inter-var.woff2"
			as="font"
			type="font/woff2"
			crossorigin
		/>
		
		<!-- SEO -->
		<meta name="robots" content="index, follow" />
		<meta property="og:title" content={`${title} | Кубики-Самоучки`} />
		<meta property="og:description" content={description} />
		<meta property="og:type" content="website" />
		<meta name="twitter:card" content="summary_large_image" />
		
		<title>{title} | Кубики-Самоучки</title>
		<ViewTransitions />
		
		<!-- Critical CSS -->
		<style is:global>
			:root {
				--safe-area-inset-top: env(safe-area-inset-top, 0px);
				--safe-area-inset-bottom: env(safe-area-inset-bottom, 0px);
			}

			@media (max-width: 640px) {
				html {
					font-size: 14px;
					-webkit-text-size-adjust: 100%;
				}
			}
			
			@media (min-width: 641px) and (max-width: 1024px) {
				html {
					font-size: 15px;
				}
			}
			
			@supports (-webkit-touch-callout: none) {
				.min-h-screen {
					min-height: -webkit-fill-available;
				}
			}

			/* Smooth scrolling for the whole page */
			html {
				scroll-behavior: smooth;
			}

			/* Better tap targets on mobile */
			@media (max-width: 640px) {
				a, button {
					min-height: 44px;
					min-width: 44px;
					padding: 0.5rem;
				}
			}

			/* Disable pull-to-refresh on mobile */
			body {
				overscroll-behavior-y: contain;
			}

			/* Better focus styles */
			:focus-visible {
				outline: 2px solid #3b82f6;
				outline-offset: 2px;
			}
		</style>
	</head>
	<body class="min-h-screen bg-[radial-gradient(ellipse_at_top,_var(--tw-gradient-stops))] from-sky-50 via-slate-50 to-zinc-50 font-sans antialiased overflow-x-hidden text-slate-900 selection:bg-blue-600/10 selection:text-blue-600">
		<div class="flex flex-col min-h-screen">
			<Header variant={headerVariant} />
			<main class="flex-grow relative min-h-[calc(100vh-4rem)] pt-16 safe-top">
				<div class="w-full">
				<!-- Background decoration -->
				<div class="fixed inset-0 -z-10 overflow-hidden pointer-events-none">
					<div class="absolute -top-40 -right-32 w-[20rem] md:w-[40rem] h-[20rem] md:h-[40rem] bg-blue-200/40 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob"></div>
					<div class="absolute -bottom-40 -left-32 w-[20rem] md:w-[40rem] h-[20rem] md:h-[40rem] bg-emerald-200/40 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob animation-delay-2000"></div>
					<div class="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[20rem] md:w-[40rem] h-[20rem] md:h-[40rem] bg-violet-200/40 rounded-full mix-blend-multiply filter blur-3xl opacity-30 animate-blob animation-delay-4000"></div>
					<div class="absolute inset-0 bg-[url('/patterns/mesh.svg')] bg-repeat opacity-5 bg-fixed"></div>
					<div class="absolute inset-0 bg-gradient-to-b from-transparent via-white/30 to-white/80"></div>
				</div>
					<slot />
				</div>
			</main>
			<Footer />
		</div>

		<!-- Scroll to top button -->
		<button
			id="scroll-to-top"
			class="fixed bottom-8 right-8 p-2 rounded-full bg-primary-600 text-white shadow-lg opacity-0 transition-opacity duration-300 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 focus:ring-offset-2"
			aria-label="Вернуться наверх"
		>
			<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
				<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 10l7-7m0 0l7 7m-7-7v18"></path>
			</svg>
		</button>

		<script>
			// Scroll to top functionality
			const scrollButton = document.getElementById('scroll-to-top');
			if (scrollButton) {
				window.addEventListener('scroll', () => {
					if (window.scrollY > 300) {
						scrollButton.classList.replace('opacity-0', 'opacity-100');
					} else {
						scrollButton.classList.replace('opacity-100', 'opacity-0');
					}
				});

				scrollButton.addEventListener('click', () => {
					window.scrollTo({ top: 0, behavior: 'smooth' });
				});
			}
		</script>
	</body>
</html>
